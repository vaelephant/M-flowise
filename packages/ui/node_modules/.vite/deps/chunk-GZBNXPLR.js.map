{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/highlight.js@9.15.10/node_modules/highlight.js/lib/languages/nimrod.js"],
  "sourcesContent": ["module.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU,SAAS,MAAM;AAC9B,aAAO;AAAA,QACL,SAAS,CAAC,KAAK;AAAA,QACf,UAAU;AAAA,UACR,SACE;AAAA,UAMF,SACE;AAAA,UACF,UACE;AAAA,QAKJ;AAAA,QACA,UAAU;AAAA,UAAE;AAAA,YACR,WAAW;AAAA;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,WAAW;AAAA,UACb;AAAA,UAAG;AAAA,YACD,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU,CAAC,EAAC,OAAO,KAAI,CAAC;AAAA,UAC1B;AAAA,UAAG;AAAA,YACD,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,UACP;AAAA,UACA,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UAAG;AAAA,YACD,WAAW;AAAA,YACX,WAAW;AAAA,YACX,UAAU;AAAA,cACR,EAAC,OAAO,2DAA0D;AAAA,cAClE,EAAC,OAAO,8CAA6C;AAAA,cACrD,EAAC,OAAO,gDAA+C;AAAA,cACvD,EAAC,OAAO,wCAAuC;AAAA,YACjD;AAAA,UACF;AAAA,UACA,KAAK;AAAA,QACP;AAAA,MACF;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
