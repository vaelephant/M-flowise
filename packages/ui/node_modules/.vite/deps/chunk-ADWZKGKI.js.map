{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/highlight.js@9.15.10/node_modules/highlight.js/lib/languages/coffeescript.js"],
  "sourcesContent": ["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super yield import export from as default await ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],
  "mappings": "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",
  "names": []
}
