{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/highlight.js@9.15.10/node_modules/highlight.js/lib/languages/perl.js"],
  "sourcesContent": ["module.exports = function(hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{', end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{', end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    variants: [\n      {begin: /\\$\\d/},\n      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n    ]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      '^\\\\=\\\\w',\n      '\\\\=cut',\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q', end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'', end: '\\'',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '`', end: '`',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '{\\\\w+}',\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: '(m|qr)?/', end: '/[a-z]*',\n          contains: [hljs.BACKSLASH_ESCAPE],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]', excludeEnd: true,\n      relevance: 5,\n      contains: [hljs.TITLE_MODE]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n            begin: \"^@@.*\",\n            end: \"$\",\n            className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['pl', 'pm'],\n    lexemes: /[\\w\\.]+/,\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n};"],
  "mappings": "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",
  "names": []
}
