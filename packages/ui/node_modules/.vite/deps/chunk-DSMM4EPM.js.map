{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/highlight.js@9.15.10/node_modules/highlight.js/lib/languages/livescript.js"],
  "sourcesContent": ["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger case default function var with ' +\n      // LiveScript keywords\n      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n      'case default function var void const let enum export import native ' +\n      '__hasProp __extends __slice __bind __indexOf',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // LiveScript literals\n      'yes no on off it that void',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],
  "mappings": "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",
  "names": []
}
