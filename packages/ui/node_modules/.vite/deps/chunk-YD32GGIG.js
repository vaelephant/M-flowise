import {
  __commonJS
} from "./chunk-WGAPYIUP.js";

// ../../node_modules/.pnpm/refractor@2.10.1/node_modules/refractor/lang/matlab.js
var require_matlab = __commonJS({
  "../../node_modules/.pnpm/refractor@2.10.1/node_modules/refractor/lang/matlab.js"(exports, module) {
    module.exports = matlab;
    matlab.displayName = "matlab";
    matlab.aliases = [];
    function matlab(Prism) {
      Prism.languages.matlab = {
        comment: [/%\{[\s\S]*?\}%/, /%.+/],
        string: {
          pattern: /\B'(?:''|[^'\r\n])*'/,
          greedy: true
        },
        // FIXME We could handle imaginary numbers as a whole
        number: /(?:\b\d+\.?\d*|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
        keyword: /\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
        function: /(?!\d)\w+(?=\s*\()/,
        operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
        punctuation: /\.{3}|[.,;\[\](){}!]/
      };
    }
  }
});

export {
  require_matlab
};
//# sourceMappingURL=chunk-YD32GGIG.js.map
